{
  "version": 3,
  "sources": ["../../scrollama/src/dom.js", "../../scrollama/src/debug.js", "../../scrollama/src/generateId.js", "../../scrollama/src/err.js", "../../scrollama/src/getIndex.js", "../../scrollama/src/createProgressThreshold.js", "../../scrollama/src/parseOffset.js", "../../scrollama/src/indexSteps.js", "../../scrollama/src/getOffsetTop.js", "../../scrollama/src/scroll.js", "../../scrollama/src/entry.js", "../../scrollama/index.js"],
  "sourcesContent": ["// DOM helper functions\n\n// public\nfunction selectAll(selector, parent = document) {\n  if (typeof selector === 'string') {\n    return Array.from(parent.querySelectorAll(selector));\n  } else if (selector instanceof Element) {\n    return [selector];\n  } else if (selector instanceof NodeList) {\n    return Array.from(selector);\n  } else if (selector instanceof Array) {\n    return selector;\n  }\n  return [];\n}\n\nexport { selectAll };\n", "\n// SETUP\nfunction create(className) {\n\tconst el = document.createElement(\"div\");\n\tel.className = `scrollama__debug-step ${className}`;\n\tel.style.position = \"fixed\";\n\tel.style.left = \"0\";\n\tel.style.width = \"100%\";\n\tel.style.zIndex = \"9999\";\n\tel.style.borderTop = \"2px solid black\";\n\tel.style.borderBottom = \"2px solid black\";\n\n\tconst p = document.createElement(\"p\");\n\tp.style.position = \"absolute\";\n\tp.style.left = \"0\";\n\tp.style.height = \"1px\";\n\tp.style.width = \"100%\";\n\tp.style.borderTop = \"1px dashed black\";\n\n\tel.appendChild(p);\n\tdocument.body.appendChild(el);\n\treturn el;\n}\n\n// UPDATE\nfunction update({ id, step, marginTop }) {\n\tconst { index, height } = step;\n\tconst className = `scrollama__debug-step--${id}-${index}`;\n\tlet el = document.querySelector(`.${className}`);\n\tif (!el) el = create(className);\n\n\tel.style.top = `${marginTop * -1}px`;\n\tel.style.height = `${height}px`;\n\tel.querySelector(\"p\").style.top = `${height / 2}px`;\n}\n\nexport { update };\n", "  export default function generateId() {\n    const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    const date = Date.now();\n    const result = [];\n    for (let i = 0; i < 6; i += 1) {\n      const char = alphabet[Math.floor(Math.random() * alphabet.length)];\n      result.push(char);\n    }\n    return `${result.join(\"\")}${date}`;\n  }", "export default function err(msg) {\n\tconsole.error(`scrollama error: ${msg}`);\n}", "export default function getIndex(node) {\n\treturn +node.getAttribute(\"data-scrollama-index\");\n}\n", "export default function createProgressThreshold(height, threshold) {\n    const count = Math.ceil(height / threshold);\n    const t = [];\n    const ratio = 1 / count;\n    for (let i = 0; i < count + 1; i += 1) {\n      t.push(i * ratio);\n    }\n    return t;\n  }", "export default function parseOffset(x) {\n\tif (typeof x === \"string\" && x.indexOf(\"px\") > 0) {\n\t\tconst v = +x.replace(\"px\", \"\");\n\t\tif (!isNaN(v)) return { format: \"pixels\", value: v };\n\t\telse {\n\t\t\terr(\"offset value must be in 'px' format. Fallback to 0.5.\");\n\t\t\treturn { format: \"percent\", value: 0.5 };\n\t\t}\n\t} else if (typeof x === \"number\" || !isNaN(+x)) {\n\t\tif (x > 1) err(\"offset value is greater than 1. Fallback to 1.\");\n\t\tif (x < 0) err(\"offset value is lower than 0. Fallback to 0.\");\n\t\treturn { format: \"percent\", value: Math.min(Math.max(0, x), 1) };\n\t}\n\treturn null;\n}", "export default function indexSteps(steps) {\n\tsteps.forEach((step) =>\n\t\tstep.node.setAttribute(\"data-scrollama-index\", step.index)\n\t);\n}", "export default function getOffsetTop(node) {\n  const { top } = node.getBoundingClientRect();\n  const scrollTop = window.pageYOffset;\n  const clientTop = document.body.clientTop || 0;\n  return top + scrollTop - clientTop;\n}\n", "let previousScrollY;\nlet currentScrollY;\nlet comparisonScrollY;\nlet direction;\n\nfunction onScroll(container) {\n\tconst scrollTop = container ? container.scrollTop : window.pageYOffset;\n\n\tif (currentScrollY === scrollTop) return;\n\n\tpreviousScrollY = currentScrollY;\n\tcurrentScrollY = scrollTop;\n\tif (currentScrollY > comparisonScrollY) direction = \"down\";\n\telse if (currentScrollY < comparisonScrollY) direction = \"up\";\n\tcomparisonScrollY = currentScrollY;\n}\n\nfunction setupScroll(container) {\n\tpreviousScrollY = 0;\n\tcurrentScrollY = 0;\n\tcomparisonScrollY = 0;\n\tdocument.addEventListener(\"scroll\", () => onScroll(container));\n}\n\nexport { setupScroll, onScroll, direction, previousScrollY, currentScrollY };\n", "import { selectAll } from \"./dom\";\nimport * as bug from \"./debug\";\nimport generateId from \"./generateId\";\nimport err from \"./err\";\nimport getIndex from \"./getIndex\";\nimport createProgressThreshold from \"./createProgressThreshold\";\nimport parseOffset from \"./parseOffset\";\nimport indexSteps from \"./indexSteps\";\nimport getOffsetTop from \"./getOffsetTop\";\nimport { setupScroll, direction, onScroll } from \"./scroll\";\n\nfunction scrollama() {\n\tlet cb = {};\n\n\tlet id = generateId();\n\tlet steps = [];\n\tlet globalOffset;\n\tlet containerElement;\n\tlet rootElement;\n\n\tlet progressThreshold = 0;\n\n\tlet isEnabled = false;\n\tlet isProgress = false;\n\tlet isDebug = false;\n\tlet isTriggerOnce = false;\n\n\tlet exclude = [];\n\n\t/* HELPERS */\n\tfunction reset() {\n\t\tcb = {\n\t\t\tstepEnter: () => { },\n\t\t\tstepExit: () => { },\n\t\t\tstepProgress: () => { },\n\t\t};\n\t\texclude = [];\n\t}\n\n\tfunction handleEnable(shouldEnable) {\n\t\tif (shouldEnable && !isEnabled) updateObservers();\n\t\tif (!shouldEnable && isEnabled) disconnectObservers();\n\t\tisEnabled = shouldEnable;\n\t}\n\n\t/* NOTIFY CALLBACKS */\n\tfunction notifyProgress(element, progress) {\n\t\tconst index = getIndex(element);\n\t\tconst step = steps[index];\n\t\tif (progress !== undefined) step.progress = progress;\n\t\tconst response = { element, index, progress, direction };\n\t\tif (step.state === \"enter\") cb.stepProgress(response);\n\t}\n\n\tfunction notifyOthers(index, location) {\n\t\tconsole.log(index, location, direction, currentScrollY, previousScrollY);\n\t\tif (location === \"above\") {\n\t\t\tlet i = direction === \"down\" ? 0 : index - 1;\n\t\t\tlet end = direction === \"down\" ? i < index : i >= 0;\n\t\t\tlet inc = direction === \"down\" ? 1 : -1;\n\t\t\tfor (i; end; inc) {\n\t\t\t\tconst step = steps[i];\n\t\t\t\tconsole.log(\n\t\t\t\t\tObject.keys(step)\n\t\t\t\t\t\t.map((p) => `${p} - ${step[p]}`)\n\t\t\t\t\t\t.join(\"\\n \")\n\t\t\t\t);\n\t\t\t\tif (direction === \"down\") {\n\t\t\t\t\tif (step.state !== \"enter\" && step.direction !== \"down\") {\n\t\t\t\t\t\tnotifyStepEnter(step.node, false);\n\t\t\t\t\t\tnotifyStepExit(step.node, false);\n\t\t\t\t\t} else if (step.state === \"enter\") notifyStepExit(step.node, false);\n\t\t\t\t} else if (direction === \"up\") {\n\t\t\t\t\tif (step.state !== \"enter\" && step.direction === \"down\") {\n\t\t\t\t\t\tnotifyStepEnter(step.node, false);\n\t\t\t\t\t\tnotifyStepExit(step.node, false);\n\t\t\t\t\t} else if (step.state === \"enter\") notifyStepExit(step.node, false);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (location === \"below\") {\n\t\t\tfor (let i = steps.length - 1; i > index; i -= 1) {\n\t\t\t\tconst step = steps[i];\n\t\t\t\tif (step.state === \"enter\") notifyStepExit(step.node);\n\t\t\t\tif (step.direction === \"down\") {\n\t\t\t\t\tnotifyStepEnter(step.node, false);\n\t\t\t\t\tnotifyStepExit(step.node, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction notifyStepEnter(element, check = true) {\n\t\tconst index = getIndex(element);\n\t\tconst step = steps[index];\n\t\tconst response = { element, index, direction };\n\n\t\tstep.direction = direction;\n\t\tstep.state = \"enter\";\n\n\t\t// if (isPreserveOrder && check && direction !== \"up\")\n\t\t//   notifyOthers(index, \"above\");\n\t\t// if (isPreserveOrder && check && direction === \"up\")\n\t\t//   notifyOthers(index, \"below\");\n\n\t\tif (!exclude[index]) cb.stepEnter(response);\n\t\tif (isTriggerOnce) exclude[index] = true;\n\t}\n\n\tfunction notifyStepExit(element, check = true) {\n\t\tconst index = getIndex(element);\n\t\tconst step = steps[index];\n\n\t\tif (!step.state) return false;\n\n\t\tconst response = { element, index, direction };\n\n\t\tif (isProgress) {\n\t\t\tif (direction === \"down\" && step.progress < 1) notifyProgress(element, 1);\n\t\t\telse if (direction === \"up\" && step.progress > 0)\n\t\t\t\tnotifyProgress(element, 0);\n\t\t}\n\n\t\tstep.direction = direction;\n\t\tstep.state = \"exit\";\n\n\t\tcb.stepExit(response);\n\t}\n\n\t/* OBSERVERS - HANDLING */\n\tfunction resizeStep([entry]) {\n\t\tconst index = getIndex(entry.target);\n\t\tconst step = steps[index];\n\t\tconst h = entry.target.offsetHeight;\n\t\tif (h !== step.height) {\n\t\t\tstep.height = h;\n\t\t\tdisconnectObserver(step);\n\t\t\tupdateStepObserver(step);\n\t\t\tupdateResizeObserver(step);\n\t\t}\n\t}\n\n\tfunction intersectStep([entry]) {\n\t\tonScroll(containerElement);\n\n\t\tconst { isIntersecting, target } = entry;\n\t\tif (isIntersecting) notifyStepEnter(target);\n\t\telse notifyStepExit(target);\n\t}\n\n\tfunction intersectProgress([entry]) {\n\t\tconst index = getIndex(entry.target);\n\t\tconst step = steps[index];\n\t\tconst { isIntersecting, intersectionRatio, target } = entry;\n\t\tif (isIntersecting && step.state === \"enter\")\n\t\t\tnotifyProgress(target, intersectionRatio);\n\t}\n\n\t/*  OBSERVERS - CREATION */\n\tfunction disconnectObserver({ observers }) {\n\t\tObject.keys(observers).map((name) => {\n\t\t\tobservers[name].disconnect();\n\t\t});\n\t}\n\n\tfunction disconnectObservers() {\n\t\tsteps.forEach(disconnectObserver);\n\t}\n\n\tfunction updateResizeObserver(step) {\n\t\tconst observer = new ResizeObserver(resizeStep);\n\t\tobserver.observe(step.node);\n\t\tstep.observers.resize = observer;\n\t}\n\n\tfunction updateResizeObservers() {\n\t\tsteps.forEach(updateResizeObserver);\n\t}\n\n\tfunction updateStepObserver(step) {\n\t\tconst h = window.innerHeight;\n\t\tconst off = step.offset || globalOffset;\n\t\tconst factor = off.format === \"pixels\" ? 1 : h;\n\t\tconst offset = off.value * factor;\n\t\tconst marginTop = step.height / 2 - offset;\n\t\tconst marginBottom = step.height / 2 - (h - offset);\n\t\tconst rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n\t\tconst root = rootElement;\n\n\t\tconst threshold = 0.5;\n\t\tconst options = { rootMargin, threshold, root };\n\t\tconst observer = new IntersectionObserver(intersectStep, options);\n\n\t\tobserver.observe(step.node);\n\t\tstep.observers.step = observer;\n\n\t\tif (isDebug) bug.update({ id, step, marginTop, marginBottom });\n\t}\n\n\tfunction updateStepObservers() {\n\t\tsteps.forEach(updateStepObserver);\n\t}\n\n\tfunction updateProgressObserver(step) {\n\t\tconst h = window.innerHeight;\n\t\tconst off = step.offset || globalOffset;\n\t\tconst factor = off.format === \"pixels\" ? 1 : h;\n\t\tconst offset = off.value * factor;\n\t\tconst marginTop = -offset + step.height;\n\t\tconst marginBottom = offset - h;\n\t\tconst rootMargin = `${marginTop}px 0px ${marginBottom}px 0px`;\n\n\t\tconst threshold = createProgressThreshold(step.height, progressThreshold);\n\t\tconst options = { rootMargin, threshold };\n\t\tconst observer = new IntersectionObserver(intersectProgress, options);\n\n\t\tobserver.observe(step.node);\n\t\tstep.observers.progress = observer;\n\t}\n\n\tfunction updateProgressObservers() {\n\t\tsteps.forEach(updateProgressObserver);\n\t}\n\n\tfunction updateObservers() {\n\t\tdisconnectObservers();\n\t\tupdateResizeObservers();\n\t\tupdateStepObservers();\n\t\tif (isProgress) updateProgressObservers();\n\t}\n\n\t/* SETUP */\n\tconst S = {};\n\n\tS.setup = ({\n\t\tstep,\n\t\tparent,\n\t\toffset = 0.5,\n\t\tthreshold = 4,\n\t\tprogress = false,\n\t\tonce = false,\n\t\tdebug = false,\n\t\tcontainer = undefined,\n\t\troot = null\n\t}) => {\n\n\t\tsetupScroll(container);\n\n\t\tsteps = selectAll(step, parent).map((node, index) => ({\n\t\t\tindex,\n\t\t\tdirection: undefined,\n\t\t\theight: node.offsetHeight,\n\t\t\tnode,\n\t\t\tobservers: {},\n\t\t\toffset: parseOffset(node.dataset.offset),\n\t\t\ttop: getOffsetTop(node),\n\t\t\tprogress: 0,\n\t\t\tstate: undefined,\n\t\t}));\n\n\t\tif (!steps.length) {\n\t\t\terr(\"no step elements\");\n\t\t\treturn S;\n\t\t}\n\n\t\tisProgress = progress;\n\t\tisTriggerOnce = once;\n\t\tisDebug = debug;\n\t\tprogressThreshold = Math.max(1, +threshold);\n\t\tglobalOffset = parseOffset(offset);\n\t\tcontainerElement = container;\n\t\trootElement = root;\n\n\t\treset();\n\t\tindexSteps(steps);\n\t\thandleEnable(true);\n\t\treturn S;\n\t};\n\n\tS.enable = () => {\n\t\thandleEnable(true);\n\t\treturn S;\n\t};\n\n\tS.disable = () => {\n\t\thandleEnable(false);\n\t\treturn S;\n\t};\n\n\tS.destroy = () => {\n\t\thandleEnable(false);\n\t\treset();\n\t\treturn S;\n\t};\n\n\tS.resize = () => {\n\t\tupdateObservers();\n\t\treturn S;\n\t};\n\n\tS.offset = (x) => {\n\t\tif (x === null || x === undefined) return globalOffset.value;\n\t\tglobalOffset = parseOffset(x);\n\t\tupdateObservers();\n\t\treturn S;\n\t};\n\n\tS.onStepEnter = (f) => {\n\t\tif (typeof f === \"function\") cb.stepEnter = f;\n\t\telse err(\"onStepEnter requires a function\");\n\t\treturn S;\n\t};\n\n\tS.onStepExit = (f) => {\n\t\tif (typeof f === \"function\") cb.stepExit = f;\n\t\telse err(\"onStepExit requires a function\");\n\t\treturn S;\n\t};\n\n\tS.onStepProgress = (f) => {\n\t\tif (typeof f === \"function\") cb.stepProgress = f;\n\t\telse err(\"onStepProgress requires a function\");\n\t\treturn S;\n\t};\n\treturn S;\n}\n\nexport default scrollama;\n", "import entry from \"./src/entry\";\n\nexport default entry;\n"],
  "mappings": "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",
  "names": ["err", "previousScrollY", "currentScrollY", "err"]
}
